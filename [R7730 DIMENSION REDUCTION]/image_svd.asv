% image compression with PCA, basic version
% refernce: https://github.com/Wanggcong/Statistical-Analysis-Method-/blob/master/project3/16337292_%E8%A2%81%E6%B5%A9%E6%89%AC/pca.m


clear; 
clc; 
close all;

% parameters
% comp_ratio = 0.3;
top_n = 200;

% get the gray image data
img = imread('manpose.jpg');
data = im2double(rgb2gray(img));
[n_col, n_row] = size(img);
% TODO optional: block processing

[U, S, V] = svd(data);

svd_mat = zeros(size(data));
for p = 1 : top_n
   svd_mat = svd_mat + ...
       (U(:, p) * V(p, :)) .* S(p, p);    
end

figure;
imsh
imshow(svd_mat);


% % whitening
% avg = mean(mean(data));
% white_data = data - avg;
% 
% % covariance matrix
% cov_mat = white_data * white_data';
% 
% % eigen values and vectors
% [eig_vctr, eig_values] = eig(cov_mat);
% [~, order] = sort(diag(eig_values), 'descend');
% eig_vctr = eig_vctr(:, order);
% 
% % compression
% eig_vctr_comp = eig_vctr(:, 1:floor(n_col*comp_ratio));
% img_regen = (white_data' * eig_vctr_comp) * eig_vctr_comp';
% img_regen = img_regen' + avg;
% % optional TODO: difference between original and compressed images.
% 
% % calculate errors - PMLAI 20.1.4.1
% % TODO: why is this not zero when compression ratio is 1?
% loss = sum(sum((img_regen - data).^2)) / (n_col * n_row);
% disp('Loss = ');
% disp(loss);
% 
% % plotting
% figure(1),subplot(121),imshow(data,[]); title('Original Image');
% figure(1),subplot(122),imshow(img_regen,[]); title('Compressed Image');

